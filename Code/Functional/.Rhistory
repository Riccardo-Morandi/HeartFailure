gcv[i] <- mean(data.smooth$gcv)
}
plot(log(lambda),gcv,type = "b")
abline(v = log(lambda[which.min(gcv)]), col = 2)
lambda[which.min(gcv)]
basis <- create.bspline.basis(weeks, norder=5)
lam <- 0.025
functionalPar <- fdPar(fdobj=basis, Lfdobj=3, lambda=lam)
data.smooth <- smooth.basis(weeks, weekly_pdc, functionalPar)
eval.0 <- eval.fd(weeks, data.smooth$fd, Lfd=0)
plot.fd(data.smooth$fd[index[1:10]],xlab='weeks',ylab='PDC')
derivatives <- deriv.fd(data.smooth$fd,1)
plot.fd(data.smooth$fd[index[1:5]],xlab='weeks',ylab='PDC')
plot.fd(derivatives[index[1:5]],xlab='weeks',ylab='PDC')
pca.res <- pca.fd(derivatives,nharm=10,centerfns=TRUE)
k <- length(pca.res$values)
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
basis <- create.bspline.basis(weeks, norder=5)
lam <- 10
functionalPar <- fdPar(fdobj=basis, Lfdobj=3, lambda=lam)
data.smooth <- smooth.basis(weeks, weekly_pdc, functionalPar)
eval.0 <- eval.fd(weeks, data.smooth$fd, Lfd=0)
plot.fd(data.smooth$fd[index[1:10]],xlab='weeks',ylab='PDC')
derivatives <- deriv.fd(data.smooth$fd,1)
plot.fd(data.smooth$fd[index[1:5]],xlab='weeks',ylab='PDC')
plot.fd(derivatives[index[1:5]],xlab='weeks',ylab='PDC')
pca.res <- pca.fd(derivatives,nharm=10,centerfns=TRUE)
k <- length(pca.res$values)
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
cumsum(pca.res$values[1:10])/sum(pca.res$values)
media <- mean.fd(data.fd)
par(mfrow = c(2,3))
plot(media,lwd=2,ylim=c(0,0.65),xlab='weeks',main='FPC1')
lines(media+pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=2)
lines(media-pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='weeks',main='FPC2')
lines(media+pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=2)
lines(media-pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='weeks',main='FPC3')
lines(media+pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=2)
lines(media-pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=3)
plot(media,lwd=2,ylim=c(0,0.65),xlab='weeks',main='FPC4')
lines(media+pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=2)
lines(media-pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='weeks',main='FPC5')
lines(media+pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=2)
lines(media-pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='weeks',main='FPC6')
lines(media+pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=2)
lines(media-pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=3)
scores <- data.frame(pca.res$scores)
colnames(scores) <- c("comp1","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","comp10")
scores$label <- pazienti$labelOUT
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp3)) + geom_point(aes(col = label))
basis <- create.bspline.basis(weeks, norder=5)
lam <- 100
functionalPar <- fdPar(fdobj=basis, Lfdobj=3, lambda=lam)
data.smooth <- smooth.basis(weeks, weekly_pdc, functionalPar)
eval.0 <- eval.fd(weeks, data.smooth$fd, Lfd=0)
plot.fd(data.smooth$fd[index[1:10]],xlab='weeks',ylab='PDC')
derivatives <- deriv.fd(data.smooth$fd,1)
plot.fd(data.smooth$fd[index[1:5]],xlab='weeks',ylab='PDC')
plot.fd(derivatives[index[1:5]],xlab='weeks',ylab='PDC')
pca.res <- pca.fd(derivatives,nharm=10,centerfns=TRUE)
k <- length(pca.res$values)
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
cumsum(pca.res$values[1:10])/sum(pca.res$values)
media <- mean.fd(data.fd)
par(mfrow = c(2,3))
plot(media,lwd=2,ylim=c(0,0.65),xlab='weeks',main='FPC1')
lines(media+pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=2)
lines(media-pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='weeks',main='FPC2')
lines(media+pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=2)
lines(media-pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='weeks',main='FPC3')
lines(media+pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=2)
lines(media-pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=3)
plot(media,lwd=2,ylim=c(0,0.65),xlab='weeks',main='FPC4')
lines(media+pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=2)
lines(media-pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='weeks',main='FPC5')
lines(media+pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=2)
lines(media-pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='weeks',main='FPC6')
lines(media+pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=2)
lines(media-pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=3)
par(mfrow=c(2,3))
plot(pca.res, nx=150, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='week')
scores <- data.frame(pca.res$scores)
colnames(scores) <- c("comp1","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","comp10")
scores$label <- pazienti$labelOUT
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label)) + facet_wrap(vars(label))
basis <- create.bspline.basis(weeks, norder=5)
lam <- lambda[which.min(gcv)]
functionalPar <- fdPar(fdobj=basis, Lfdobj=3, lambda=lam)
data.smooth <- smooth.basis(weeks, weekly_pdc, functionalPar)
eval.0 <- eval.fd(weeks, data.smooth$fd, Lfd=0)
plot.fd(data.smooth$fd[index[1:10]],xlab='weeks',ylab='PDC')
derivatives <- deriv.fd(data.smooth$fd,1)
plot.fd(data.smooth$fd[index[1:5]],xlab='weeks',ylab='PDC')
plot.fd(derivatives[index[1:5]],xlab='weeks',ylab='PDC')
pca.res <- pca.fd(derivatives,nharm=10,centerfns=TRUE)
k <- length(pca.res$values)
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
cumsum(pca.res$values[1:10])/sum(pca.res$values)
media <- mean.fd(data.fd)
par(mfrow = c(2,3))
plot(media,lwd=2,ylim=c(0,0.65),xlab='weeks',main='FPC1')
lines(media+pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=2)
lines(media-pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='weeks',main='FPC2')
lines(media+pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=2)
lines(media-pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='weeks',main='FPC3')
lines(media+pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=2)
lines(media-pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=3)
plot(media,lwd=2,ylim=c(0,0.65),xlab='weeks',main='FPC4')
lines(media+pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=2)
lines(media-pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='weeks',main='FPC5')
lines(media+pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=2)
lines(media-pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='weeks',main='FPC6')
lines(media+pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=2)
lines(media-pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=3)
par(mfrow=c(2,3))
plot(pca.res, nx=150, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='week')
scores <- data.frame(pca.res$scores)
colnames(scores) <- c("comp1","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","comp10")
scores$label <- pazienti$labelOUT
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp3,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp3,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp4,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label)) + facet_wrap(vars(label))
scores %>% ggplot(aes(y = comp1, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp2, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp3, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp4, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp5, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp6, fill = label)) + geom_histogram(bins = 30, position = "fill")
setwd("/Users/macbookpro/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/")
library(tidyverse)
library(fda)
library(fields)
load("~/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/pazienti.RData")
load("~/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/PDC_AA.RData")
n=dim(PDC_AA)[2]
index=sample(n,20)
matplot(PDC_AA[,index],type = 'l',main='dayly PDC',xlab='day',ylab='PDC')
index
PDC_AA[,index[1]]
PDC_AA[,index[2]]
days <- 1:365
basis <- create.bspline.basis(rangeval=range(days),nbasis=150,norder = 4)
data.fd <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis)
plot.fd(data.fd[index],xlab='days',ylab='PDC')
basis <- create.bspline.basis(rangeval=range(days),nbasis=365,norder = 4)
data.fd <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis)
plot.fd(data.fd[index],xlab='days',ylab='PDC')
basis <- create.bspline.basis(rangeval=range(days),nbasis=100,norder = 4)
data.fd <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis)
plot.fd(data.fd[index],xlab='days',ylab='PDC')
n <- dim(PDC_AA)[2]
nbasis <- seq(50,365,25)
gcv <- numeric(length(nbasis))
PDC_AA_subset <- PDC_AA[,sample(n,1000)]
for (i in 1:length(nbasis)){
basis <- create.bspline.basis(rangeval=range(days),nbasis=nbasis[i],norder = 4)
for(j in 1:1000){
gcv[i] <- gcv[i] + smooth.basis(days, PDC_AA_subset[,j], basis)$gcv
}
gcv[i] <- gcv[i]/n
}
plot(nbasis,gcv,type = "b")
nbasis[which.min(gcv)]
abline(v = nbasis[which.min(gcv)], col = 2)
basis <- create.bspline.basis(rangeval=range(days),nbasis=2875,norder = 4)
data.fd <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis)
basis <- create.bspline.basis(rangeval=range(days),nbasis=275,norder = 4)
data.fd <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis)
basis.1 <- create.bspline.basis(rangeval=range(days),nbasis=365,norder = 4)
data_W.fd.1 <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis.1)
basis.2 <- create.bspline.basis(rangeval=range(days),nbasis=275,norder = 4)
data_W.fd.2 <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis.2)
par(mfrow=c(1,2))
eval.1 <- eval.fd(days,data_W.fd.1)
image.plot(days,days,(cov(t(eval.1))[1:365,]))
eval.2 <- eval.fd(days,data_W.fd.2)
image.plot(days,days,(cor(t(eval.2))[1:365,]))
basis.1 <- create.bspline.basis(rangeval=range(days),nbasis=365,norder = 4)
data_W.fd.1 <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis.1)
basis.2 <- create.bspline.basis(rangeval=range(days),nbasis=350,norder = 4)
data_W.fd.2 <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis.2)
par(mfrow=c(1,2))
eval.1 <- eval.fd(days,data_W.fd.1)
image.plot(days,days,(cov(t(eval.1))[1:365,]))
eval.2 <- eval.fd(days,data_W.fd.2)
image.plot(days,days,(cor(t(eval.2))[1:365,]))
basis.1 <- create.bspline.basis(rangeval=range(days),nbasis=365,norder = 4)
data_W.fd.1 <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis.1)
basis.2 <- create.bspline.basis(rangeval=range(days),nbasis=275,norder = 4)
data_W.fd.2 <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis.2)
par(mfrow=c(1,2))
eval.1 <- eval.fd(days,data_W.fd.1)
image.plot(days,days,(cov(t(eval.1))[1:365,]))
eval.2 <- eval.fd(days,data_W.fd.2)
image.plot(days,days,(cor(t(eval.2))[1:365,]))
basis <- create.bspline.basis(days, norder=4)
lam <- 1
functionalPar <- fdPar(fdobj=basis, Lfdobj=2, lambda=lam)
data.smooth <- smooth.basis(days, PDC_AA, functionalPar)
eval.0 <- eval.fd(days, data.smooth$fd, Lfd=0)
plot.fd(data.smooth$fd[index[1:10]],xlab='days',ylab='PDC')
plot.fd(data.smooth$fd[index],xlab='days',ylab='PDC')
lambda <- 10^seq(-5,2,by = 0.5)
gcv <- numeric(length(lambda))
basis <- create.bspline.basis(days, norder=4)
for (i in 1:length(lambda)){
functionalPar <- fdPar(fdobj=basis, Lfdobj=2, lambda=lambda[i])
data.smooth <- smooth.basis(days, PDC_AA, functionalPar)
gcv[i] <- mean(data.smooth$gcv)
}
plot(log(lambda),gcv,type = "b")
abline(v = log(lambda[which.min(gcv)]), col = 2)
lambda <- 10^seq(-8,3,by = 0.5)
gcv <- numeric(length(lambda))
basis <- create.bspline.basis(days, norder=4)
for (i in 1:length(lambda)){
functionalPar <- fdPar(fdobj=basis, Lfdobj=2, lambda=lambda[i])
data.smooth <- smooth.basis(days, PDC_AA, functionalPar)
gcv[i] <- mean(data.smooth$gcv)
}
plot(log(lambda),gcv,type = "b")
abline(v = log(lambda[which.min(gcv)]), col = 2)
lambda[which.min(gcv)]
lambda <- 10^seq(-12,-5,by = 0.5)
gcv <- numeric(length(lambda))
basis <- create.bspline.basis(days, norder=4)
for (i in 1:length(lambda)){
functionalPar <- fdPar(fdobj=basis, Lfdobj=2, lambda=lambda[i])
data.smooth <- smooth.basis(days, PDC_AA, functionalPar)
gcv[i] <- mean(data.smooth$gcv)
}
plot(log(lambda),gcv,type = "b")
abline(v = log(lambda[which.min(gcv)]), col = 2)
lambda[which.min(gcv)]
basis <- create.bspline.basis(days, norder=4)
lam <- lambda[which.min(gcv)]
functionalPar <- fdPar(fdobj=basis, Lfdobj=2, lambda=lam)
data.smooth <- smooth.basis(days, PDC_AA, functionalPar)
eval.0 <- eval.fd(days, data.smooth$fd, Lfd=0)
plot.fd(data.smooth$fd[index],xlab='days',ylab='PDC')
id <- sample(n,100)
plot.fd(data.smooth$fd[id],xlab='days',ylab='PDC',col = pazienti$labelOUT[id])
id <- sample(n,250)
plot.fd(data.smooth$fd[id],xlab='days',ylab='PDC',col = pazienti$labelOUT[id])
pca.res <- pca.fd(data.smooth$fd,nharm=10,centerfns=TRUE)
k <- length(pca.res$values)
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0.45,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
cumsum(pca.res$values[1:10])/sum(pca.res$values)
media <- mean.fd(data.fd)
par(mfrow = c(2,3))
plot(media,lwd=2,ylim=c(0,0.65),xlab='days',main='FPC1')
lines(media+pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=2)
lines(media-pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='days',main='FPC2')
lines(media+pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=2)
lines(media-pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='days',main='FPC3')
lines(media+pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=2)
lines(media-pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=3)
plot(media,lwd=2,ylim=c(0,0.65),xlab='days',main='FPC4')
lines(media+pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=2)
lines(media-pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.6),xlab='days',main='FPC5')
lines(media+pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=2)
lines(media-pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=3)
plot(media,lwd=2,ylim=c(0.15,0.5),xlab='days',main='FPC6')
lines(media+pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=2)
lines(media-pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=3)
media <- mean.fd(data.fd)
par(mfrow = c(2,3))
plot(media,lwd=2,ylim=c(-0.2,0.65),xlab='days',main='FPC1')
lines(media+pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=2)
lines(media-pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=3)
plot(media,lwd=2,ylim=c(0,0.5),xlab='days',main='FPC2')
lines(media+pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=2)
lines(media-pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=3)
plot(media,lwd=2,ylim=c(0,0.35),xlab='days',main='FPC3')
lines(media+pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=2)
lines(media-pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=3)
plot(media,lwd=2,ylim=c(0,0.35),xlab='days',main='FPC4')
lines(media+pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=2)
lines(media-pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.35),xlab='days',main='FPC5')
lines(media+pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=2)
lines(media-pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=3)
plot(media,lwd=2,ylim=c(0,0.3),xlab='days',main='FPC6')
lines(media+pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=2)
lines(media-pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=3)
par(mfrow=c(2,3))
plot(pca.res, nx=150, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='day')
scores <- data.frame(pca.res$scores)
colnames(scores) <- c("comp1","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","comp10")
scores$label <- pazienti$labelOUT
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp3,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp3,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp4,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label)) + facet_wrap(vars(label))
scores %>% ggplot(aes(y = comp1, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp2, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp3, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp4, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp5, fill = label)) + geom_histogram(bins = 30, position = "fill")
scores %>% ggplot(aes(y = comp6, fill = label)) + geom_histogram(bins = 30, position = "fill")
basis <- create.bspline.basis(rangeval=range(days),nbasis=275,norder = 4)
data.fd <- Data2fd(y = PDC_AA,argvals = days,basisobj = basis)
pca.res <- pca.fd(data.fd,nharm=10,centerfns=TRUE)
k <- length(pca.res$values)
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0.45,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
cumsum(pca.res$values[1:10])/sum(pca.res$values)
media <- mean.fd(data.fd)
par(mfrow = c(2,3))
plot(media,lwd=2,ylim=c(-0.2,0.65),xlab='days',main='FPC1')
lines(media+pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=2)
lines(media-pca.res$harmonics[1,]*sqrt(pca.res$values[1]), col=3)
plot(media,lwd=2,ylim=c(0,0.5),xlab='days',main='FPC2')
lines(media+pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=2)
lines(media-pca.res$harmonics[2,]*sqrt(pca.res$values[2]), col=3)
plot(media,lwd=2,ylim=c(0,0.35),xlab='days',main='FPC3')
lines(media+pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=2)
lines(media-pca.res$harmonics[3,]*sqrt(pca.res$values[3]), col=3)
plot(media,lwd=2,ylim=c(0,0.35),xlab='days',main='FPC4')
lines(media+pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=2)
lines(media-pca.res$harmonics[4,]*sqrt(pca.res$values[4]), col=3)
plot(media,lwd=2,ylim=c(0.1,0.35),xlab='days',main='FPC5')
lines(media+pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=2)
lines(media-pca.res$harmonics[5,]*sqrt(pca.res$values[5]), col=3)
plot(media,lwd=2,ylim=c(0,0.3),xlab='days',main='FPC6')
lines(media+pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=2)
lines(media-pca.res$harmonics[6,]*sqrt(pca.res$values[6]), col=3)
par(mfrow=c(2,3))
plot(pca.res, nx=150, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='day')
scores <- data.frame(pca.res$scores)
colnames(scores) <- c("comp1","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","comp10")
scores$label <- pazienti$labelOUT
scores %>% ggplot(aes(comp1,comp2)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp3)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp1,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp3,comp4)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp2,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp3,comp5)) + geom_point(aes(col = label))
scores %>% ggplot(aes(comp4,comp5)) + geom_point(aes(col = label))
k <- 20
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0.45,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
par(mfrow=c(2,3))
plot(pca.res, nx=100, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='day')
par(mfrow=c(2,3))
plot(pca.res, nx=50, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='day')
pca.res <- pca.fd(data.smooth$fd,nharm=10,centerfns=TRUE)
k <- 20
par(mfrow = c(1,2))
plot(pca.res$values[1:k ],xlab='number of components',ylab='Eigenvalues',type='b')
plot(cumsum(pca.res$values[1:k ])/sum(pca.res$values), type='b', axes=F, xlab='number of components',
ylab='contribution to the total variance', ylim=c(0.45,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:k ,labels=1:k ,las=1)
mtext("scree plot f-PCA",outer = TRUE,side = 3,line = -1.5,cex = 1.5)
cumsum(pca.res$values[1:10])/sum(pca.res$values)
par(mfrow=c(2,3))
plot(pca.res, nx=50, pointplot=TRUE, harm=1:6, expand=0, cycle=FALSE,xlab='day')
setwd("/Users/macbookpro/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/")
library(tidyverse)
library(fda)
library(fields)
library(fdakma)
library(fdacluster)
load("~/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/pazienti.RData")
load("~/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/PDC_TOT.RData")
load("~/Documents/Applied Statistics/Project/Materiale_appstat/final dataframes/data.RData")
days <- 1:365
basis <- create.bspline.basis(days, norder=4)
lam <- 1e-8
functionalPar <- fdPar(fdobj=basis, Lfdobj=2, lambda=lam)
data.smooth <- smooth.basis(days, PDC_TOT, functionalPar)
eval.0 <- eval.fd(days, data.smooth$fd, Lfd=0)
n=dim(PDC_TOT)[2]
nkmeans <- 1000
x <- t(matrix(rep(days,nkmeans),365,nkmeans))
y <- t(eval.0[,1:nkmeans])
system.time(fdakma0der <- fdakmeans(x = x,y = y, n_clusters = 3,
warping_class = "none",
metric = "l2",
centroid_type = "medoid",
seeds = c(1,9,130),
parallel_method = 1L,
number_of_threads = 4L,
distance_relative_tolerance = 1e-3,
add_silhouettes = FALSE
)
)
labels <- fdakma0der$memberships
matplot(t(fdakma0der$aligned_curves[,1,]),type = 'l',
main='clustered and alligned curves',xlab='weeks',ylab='PDC', col = labels)
autoplot(fdakma0der,type = "amplitude")
matplot(t(fdakma0der$center_curves[,1,]),type = 'l',
main='clustered and alligned curves',xlab='weeks',ylab='PDC', col = 1:4)
matplot(t(fdakma0der$aligned_curves[which(labels == 1),1,]),type = 'l',
main='clustered and alligned curves',xlab='weeks',ylab='PDC',
col = pazienti[which(labels == 1),2])
table(pazienti$labelOUT[which(labels == 1)])
matplot(t(fdakma0der$aligned_curves[which(labels == 2)[1:100],1,]),type = 'l',
main='clustered and alligned curves',xlab='weeks',ylab='PDC',
col = pazienti[which(labels == 2)[1:100],2])
table(pazienti$labelOUT[which(labels == 2)])
matplot(t(fdakma0der$aligned_curves[which(labels == 3)[1:50],1,]),type = 'l',
main='clustered and alligned curves',xlab='weeks',ylab='PDC',
col = pazienti[which(labels == 3)[1:50],2])
matplot(t(fdakma0der$aligned_curves[which(labels == 3)[1:100],1,]),type = 'l',
main='clustered and alligned curves',xlab='weeks',ylab='PDC',
col = pazienti[which(labels == 3)[1:100],2])
table(pazienti$labelOUT[which(labels == 3)])
setwd("/Users/macbookpro/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/")
setwd("/Users/macbookpro/Documents/Applied Statistics/Project/Materiale_appstat/Code/Functional/")
